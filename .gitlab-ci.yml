image: python:3.9

stages:
  - static_analysis
  - test
  - deploy

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - regex='.*@ git+\(ssh\|https\):\/\/git@\(git-ce\.rwth-aachen\.de\/\)'
  - sed -n "s/$regex/git+https:\/\/gitlab-ci-token:\${CI_JOB_TOKEN}@\2/p" setup.cfg >> ci_requirements.txt
  - sed -i "/$regex/d" setup.cfg
  - pip install -r ci_requirements.txt

pylint:
  stage: static_analysis
  allow_failure: true
  script:
  - pip install pylint pylint-gitlab
  - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter src > codeclimate.json
  artifacts:
    when: always
    reports:
      codequality: codeclimate.json

unit_test:
  stage: test
  script:
  - pip install pytest pytest-cov pytest-mock pytest-cases pytest-httpserver
  - pytest --junitxml=report.xml --cov=src --cov-report=xml --cov-report=term src/tests
  coverage: /^TOTAL.+?(\d+%)$/
  artifacts:
    when: always
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

pages:
  stage: deploy
  script:
  - pip install sphinx sphinx_autodoc_typehints sphinx_autopackagesummary sphinx_rtd_theme
  - sphinx-build -b html docs public
  artifacts:
    paths:
    - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: manual
