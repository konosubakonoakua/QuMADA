image: python:3.9

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - static_analysis
  - test
  - deploy

before_script:
  - apt-get update && apt-get install -y xvfb libegl1 libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 x11-utils libxcb-cursor0
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - regex='.*@ git+\(ssh\|https\):\/\/\(git@\)\?\(git-ce\.rwth-aachen\.de\/\)'
  - sed -n "s/$regex/git+https:\/\/gitlab-ci-token:\${CI_JOB_TOKEN}@\3/p" setup.cfg >> ci_requirements.txt
  - sed -i "/$regex/d" setup.cfg
  - pip install -r ci_requirements.txt

pylint:
  stage: static_analysis
  allow_failure: true
  script:
  - pip install pylint pylint-gitlab
  - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter src > codeclimate.json
  artifacts:
    when: always
    reports:
      codequality: codeclimate.json

unit_test:
  stage: test
  script:
  - pip install pytest pytest-cov pytest-mock pytest-cases pytest-qt pytest-xvfb
  - pytest --junitxml=report.xml --cov=src --cov-report=xml --cov-report=term src/tests
  coverage: /^TOTAL.+?(\d+%)$/
  artifacts:
    when: always
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

pages:
  stage: deploy
  script:
  - pip install sphinx sphinx_autodoc_typehints sphinx_autopackagesummary sphinx_rtd_theme
  - sphinx-build -b html docs public
  artifacts:
    paths:
    - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != 'merge_request_event'
      when: manual
